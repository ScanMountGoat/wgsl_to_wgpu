---
source: wgsl_to_wgpu/src/lib.rs
---
pub mod compute {
    pub const MAIN1_WORKGROUP_SIZE: [u32; 3] = [1, 2, 3];
    pub fn create_main1_pipeline(device: &wgpu::Device) -> wgpu::ComputePipeline {
        let module = super::create_shader_module(device);
        let layout = super::create_pipeline_layout(device);
        device.create_compute_pipeline(&wgpu::ComputePipelineDescriptor {
            label: Some("Compute Pipeline main1"),
            layout: Some(&layout),
            module: &module,
            entry_point: Some("main1"),
            compilation_options: Default::default(),
            cache: Default::default(),
        })
    }
    pub const MAIN2_WORKGROUP_SIZE: [u32; 3] = [256, 1, 1];
    pub fn create_main2_pipeline(device: &wgpu::Device) -> wgpu::ComputePipeline {
        let module = super::create_shader_module(device);
        let layout = super::create_pipeline_layout(device);
        device.create_compute_pipeline(&wgpu::ComputePipelineDescriptor {
            label: Some("Compute Pipeline main2"),
            layout: Some(&layout),
            module: &module,
            entry_point: Some("main2"),
            compilation_options: Default::default(),
            cache: Default::default(),
        })
    }
}
